{"ast":null,"code":"var _jsxFileName = \"E:\\\\web Project\\\\New React JS\\\\jahidul1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textformet from './components/Textformet';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const removeBodyClasses = () => {\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n  };\n\n  const toggleMode = cls => {\n    // this line to change color \n    removeBodyClasses();\n    document.body.classList.add('bg-' + cls);\n\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = \"#706161\";\n      showAlert(\"Dark mode has been enabled\", \"Success\");\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"Success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"jahidul\",\n        aboutText: \"About\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Textformet, {\n              showAlert: showAlert,\n              heading: \"Enter the Text to Analyze Below\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"Hfaih7U57CCUbx8mYoqLc0MRXzA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/web Project/New React JS/jahidul1/src/App.js"],"names":["About","Navbar","Textformet","React","useState","Alert","BrowserRouter","Router","Switch","Route","App","mode","setmode","alert","setAlert","showAlert","message","type","msg","setTimeout","removeBodyClasses","document","body","classList","remove","toggleMode","cls","add","style","backgroundColor"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textformet from './components/Textformet';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg :message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    \n    }, 1500);\n  }\n\n  const removeBodyClasses = ()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-success')\n    \n  }\n\n  const toggleMode = (cls)=>{\n\n    \n   // this line to change color \n    removeBodyClasses();\n    document.body.classList.add('bg-' +cls)\n\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor =\"#706161\";\n      showAlert(\"Dark mode has been enabled\",\"Success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor =\"white\";\n      showAlert(\"Light mode has been enabled\",\"Success\");\n    }\n  }\n\n  return (\n       <>   \n    \n    <Router>\n            <Navbar title=\"jahidul\"  aboutText=\"About\"    mode={mode} toggleMode={toggleMode} />\n            <Alert alert={alert}/>\n            <div className=\"container my-3\">\n\n\n             <Switch>\n                <Route path=\"/about\">\n                  <About />\n                \n                </Route>\n                <Route path=\"/\">\n                <Textformet  showAlert={showAlert}     heading=\"Enter the Text to Analyze Below\" mode={mode} />\n                 \n                </Route>\n           </Switch>\n     \n            </div>\n        </Router>\n   \n       </>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}