{"ast":null,"code":"import _slicedToArray from\"E:/web Project/New React JS/jahidul1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import About from'./components/About';import Navbar from'./components/Navbar';import Textformet from'./components/Textformet';import React,{useState}from'react';import Alert from'./components/Alert';// import Card from './components/Card';\nimport{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setmode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var toggleMode=function toggleMode(){if(mode==='light'){setmode('dark');document.body.style.backgroundColor=\"#706161\";showAlert(\"Dark mode has been enabled\",\"Success\");}else{setmode('light');document.body.style.backgroundColor=\"white\";showAlert(\"Light mode has been enabled\",\"Success\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"jahidul\",aboutText:\"About\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",children:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Textformet,{showAlert:showAlert,heading:\"Enter the Text to Analyze Below\",mode:mode})})]})})]})});}export default App;","map":{"version":3,"sources":["E:/web Project/New React JS/jahidul1/src/App.js"],"names":["About","Navbar","Textformet","React","useState","Alert","BrowserRouter","Router","Switch","Route","App","mode","setmode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor"],"mappings":"2JACA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA;AAEA,OACEC,aAAa,GAAIC,CAAAA,MADnB,CAEEC,MAFF,CAGEC,KAHF,KAIO,kBAJP,C,6IAOA,QAASC,CAAAA,GAAT,EAAe,CAEb,cAAwBN,QAAQ,CAAC,OAAD,CAAhC,wCAAOO,IAAP,eAAaC,OAAb,eACA,eAA0BR,QAAQ,CAAC,IAAD,CAAlC,yCAAOS,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,OAAD,CAASC,IAAT,CAAgB,CAChCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OADE,CAEPC,IAAI,CAAEA,IAFC,CAAD,CAAR,CAKAE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAD,CAAR,CAED,CAHS,CAGP,IAHO,CAAV,CAID,CAVD,CAYA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAI,CACrB,GAAGT,IAAI,GAAK,OAAZ,CAAoB,CAClBC,OAAO,CAAC,MAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAqC,SAArC,CACAT,SAAS,CAAC,4BAAD,CAA8B,SAA9B,CAAT,CACD,CAJD,IAKI,CACFH,OAAO,CAAC,OAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAqC,OAArC,CACAT,SAAS,CAAC,6BAAD,CAA+B,SAA/B,CAAT,CACD,CACF,CAXD,CAaA,mBACK,sCACH,MAAC,MAAD,yBAEQ,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAyB,SAAS,CAAC,OAAnC,CAA8C,IAAI,CAAEJ,IAApD,CAA0D,UAAU,CAAES,UAAtE,EAFR,cAGQ,KAAC,KAAD,EAAO,KAAK,CAAEP,KAAd,EAHR,cAIQ,YAAK,SAAS,CAAC,gBAAf,uBACA,MAAC,MAAD,yBAEI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,uBACE,KAAC,KAAD,IADF,EAFJ,cAMK,KAAC,KAAD,EAAQ,KAAK,KAAb,CAAc,IAAI,CAAC,GAAnB,uBACC,KAAC,UAAD,EAAa,SAAS,CAAEE,SAAxB,CAAuC,OAAO,CAAC,iCAA/C,CAAiF,IAAI,CAAEJ,IAAvF,EADD,EANL,GADA,EAJR,GADG,EADL,CA8BD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textformet from './components/Textformet';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import Card from './components/Card';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg :message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    \n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor =\"#706161\";\n      showAlert(\"Dark mode has been enabled\",\"Success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor =\"white\";\n      showAlert(\"Light mode has been enabled\",\"Success\");\n    }\n  }\n\n  return (\n       <>   \n    <Router> \n                  {/* cardText=\"Card\"   */}\n            <Navbar title=\"jahidul\"  aboutText=\"About\"    mode={mode} toggleMode={toggleMode} />\n            <Alert alert={alert}/>\n            <div className=\"container my-3\">\n            <Switch>\n\n                <Route exact path=\"/about\">\n                  <About />       \n                </Route>\n          \n                 <Route  exact path=\"/\">\n                  <Textformet  showAlert={showAlert}     heading=\"Enter the Text to Analyze Below\" mode={mode} />\n                 </Route>\n{/* \n\n                 <Route path=\"/Card\">\n                   <Card/>      \n                </Route> */}\n\n             \n\n            </Switch>\n            </div>\n    </Router>\n       </>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}