{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textformet.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","mystyle","setmystyle","btntext","setBtnText","className","style","id","type","onClick","border","Navbar","props","mode","to","title","aboutText","placeholder","toggleMode","htmlFor","Textformet","text","setText","heading","value","onChange","event","target","rows","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","msg","App","setmode","setAlert","message","setTimeout","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db996fef.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const [mystyle, setmystyle] = useState({\r\n            color: 'black',\r\n            backgroundColor : 'white'\r\n    \r\n        })\r\n    \r\n\r\n     const [btntext, setBtnText] = useState(\"Enable Dark Mood\")\r\n      const  toggleStyle =()=>{\r\n           if(mystyle.color === 'black'){\r\n               setmystyle({\r\n                   color:'white',\r\n                   backgroundColor: 'black',\r\n                   border: '1px solid white'\r\n                   \r\n               })\r\n               setBtnText(\"Enable Light Mode\")\r\n           }\r\n           else{\r\n            setmystyle({\r\n                color:'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setBtnText(\"Enable Dark Mode\")\r\n           }\r\n\r\n        }\r\n   \r\n    return (\r\n        <div className=\"container\" style={mystyle}>\r\n            <h1 className=\"my-3\">About Us</h1>\r\n           <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={mystyle}>\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\"  style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={mystyle}>\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={mystyle}>\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n                   <div className=\"container my-3\">\r\n                   <button  onClick={toggleStyle} type=\"button\" className=\"btn btn-dark\">{btntext}</button>\r\n                   </div>\r\n                  \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      \r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">           \r\n        \r\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              {/* <a className=\"navbar-brand\" href=\"#\">{props.title}</a> */}\r\n\r\n              <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n                  <li className=\"nav-item\">                   \r\n                    {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    {/* <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a> */}\r\n                    <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                  </li>\r\n                 \r\n\r\n\r\n\r\n\r\n                </ul>\r\n                <form className=\"d-flex\">\r\n                  <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                  <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form>\r\n\r\n                <div className={`form-check form-switch text-${props.mode==='light'? 'dark':'light'} mx-2`}>\r\n                  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </nav>\r\n    )\r\n}\r\n\r\n\r\n// Navbar.propTypes = {\r\n//     title: PropTypes.string.isRequired,\r\n//     aboutText: PropTypes.string.isRequired\r\n// }\r\n\r\n// Navbar.defaultProps = {\r\n//     title: 'Title diya aey age',\r\n//     aboutText: 'About '\r\n// };","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function Textformet(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Convert to UpperCase\",\"Success\");\r\n    //    eyta diye title change kora jabe document.title =\"jahidul- UpperCase\"\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Convert to LowerCase\",\"Success\");\r\n    }\r\n\r\n\r\n    const handleDeleteClick = ()=>{\r\n        let newtext = \"\";\r\n        setText(newtext)\r\n        props.showAlert(\"Your Text is Delete\",\"Success\");\r\n    }\r\n\r\n\r\n    const handleCopy =()=>{\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Your Text is Copy\",\"Success\");\r\n    }\r\n\r\n\r\n    const handleSpaces =()=>{\r\n        let newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n        props.showAlert(\"Removed Extra Spaces\",\"Success\");\r\n      \r\n    }\r\n\r\n\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    \r\n    return (\r\n\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'? 'white':'black'}}>   \r\n            <h1>{props.heading}</h1>  \r\n              <div className=\"mb-3\">\r\n              <textarea className=\"form-control\" value={text} onChange={handleOnChange} \r\n               style={{backgroundColor:props.mode==='dark'? 'gray':'white',color: props.mode==='dark'? 'white':'black'}}  id=\"myBox\" rows=\"8\">                 \r\n              </textarea>\r\n              </div>\r\n              <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n              <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n              <button className=\"btn btn-primary mx-2\" onClick={handleDeleteClick}>Delete Text</button>\r\n              <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n              <button className=\"btn btn-primary mx-2\" onClick={handleSpaces}>Extra Space</button>\r\n       \r\n\r\n\r\n             \r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'? 'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p> {text.split(\" \").length} Words and {text.length}Characters</p>\r\n            <p> {0.008 * text.split(\"\").length} Minutes to Read </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n      props.alert &&  <div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n             \r\n             <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textformet from './components/Textformet';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg :message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    \n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor =\"#706161\";\n      showAlert(\"Dark mode has been enabled\",\"Success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor =\"white\";\n      showAlert(\"Light mode has been enabled\",\"Success\");\n    }\n  }\n\n  return (\n       <>   \n    \n    <Router>\n            <Navbar title=\"jahidul\"  aboutText=\"About\"    mode={mode} toggleMode={toggleMode} />\n            <Alert alert={alert}/>\n            <div className=\"container my-3\">\n\n\n             <Switch>\n                <Route path=\"/about\">\n                  <About />\n                \n                </Route>\n                <Route path=\"/\">\n                <Textformet  showAlert={showAlert}     heading=\"Enter the Text to Analyze Below\" mode={mode} />\n                 \n                </Route>\n           </Switch>\n     \n            </div>\n        </Router>\n   \n       </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}